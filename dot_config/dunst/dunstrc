[global]
    monitor = 0

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    follow = mouse

    # The width of the notification window in pixels. This can be a single
    # number to specify a constant width or two numbers for the min and max
    # width. The notification will expand from the min width as neccesary.
    width = (0,300)

    # Maximum height of a single notification
    #height = 100

    # The number of notifications that can appear at one time. When this
    # limit is reached any additional notifications will be queued and
    # displayed when the currently displayed ones either time out or are
    # manually dismissed. The value 0 means no limit. If indicate_hidden is
    # true, then the specified limit is reduced by 1 and the last notification
    # is a message informing how many hidden notifications are waiting to be
    # displayed. See the indicate_hidden entry for more information.
    notification_limit = 0

    # The origin of the notification window on the screen. It can then be moved
    # with offset. Origin can be one of: top-left top-center top-right
    # bottom-left bottom-center bottom-right left-center center right-center
    origin = top-right

    # Respectively the horizontal and vertical offset in pixels from the corner
    # of the screen specified by origin. Both values should always be positive
    # or zero.
    offset = 20x20

    # Specifies a scale factor for dimensions to adapt notifications to HiDPI
    # screens. This scales the notification geometry and it's contents. It is not
    # recommended to use a fractional scaling factor, as this may result in things
    # being one pixel off. Try to use a whole number scaling factor and adjust the
    # font size and other sizes as needed. If 0 is specified, the scale factor is
    # auto-detected.
    scale = 0

    # When an integer value is passed to dunst as a hint (see NOTIFY-SEND), a
    # progress bar will be drawn at the bottom of the notification. This behavior can
    # be turned off by setting this setting to false.
    progress_bar = true

    # The height of the progress bar in pixel. This includes the frame. Make
    # sure this value is bigger than twice the frame width.
    progress_bar_height = 2

    # The minimum width of the progress bar in pixels. The notification is
    # rescaled to fit the bar.
    progress_bar_min_width = 150

    # The maximum width of the progress bar in pixels. The notification is
    # resized to fit the progress bar.
    progress_bar_max_width = 300

    # The frame width of the progress bar in pixels. This value should be
    # smaller than half of the progress bar height.
    progress_bar_frame_width = 1

    # Show how many messages are currently hidden (because of the notification limit, if set above 0).
    indicate_hidden = yes

    # A 0-100 range on how transparent the notification window should be, with 0
    # being fully opaque and 100 invisible.
    transparency = 0

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 1

    # Padding between text and separator.
    padding = 8

    # Horizontal padding.
    horizontal_padding = 8

    # The distance in pixels from the text to the icon (or vice versa) in the
    # horizontal axis. Setting this to a non-zero value overwrites any padding that
    # horizontal_padding was adding between the notification text and icon.
    text_icon_padding = 0

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 0

    # Defines color of the frame around the notification window.
    frame_color = "#aaaaaa"

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = auto

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    # Transient notifications ignore this setting.
    idle_threshold = 120

    # Layer (Wayland only)
    # One of bottom, top or overlay. Place dunst notifications on the selected
    # layer. Using overlay will cause notifications to be displayed above fullscreen
    # windows, though this may also occur at top depending on your compositor.
    # The bottom layer is below all windows and above the background.
    layer = overlay

    # Force the use of X11 output, even on a wayland compositor. This setting
    # has no effect when not using a Wayland compositor.
    force_xwayland = false

    ### Text ###

    # Defines the font or font set used. Optionally set the size as a decimal
    # number after the font name and space. Multiple font options can be separated
    # with commas.
    font = "Font Awesome 5 Free 14, Operator Mono Book 9"

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height. Set to 0 to disable.
    line_height = 0

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Merge multiple notifications with the same content
    stack_duplicates = true

    # Hide the count of merged notifications with the same content
    hide_duplicate_count = true

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 32

    # Paths to default icons.
    icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/bin/dmenu -p dunst:

    # Browser for opening urls in context menu.
    browser = /usr/bin/firefox -new-tab

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 4

    ### Legacy

    # Use the Xinerama extension instead of RandR for multi-monitor support.
    # This setting is provided for compatibility with older nVidia drivers that
    # do not support RandR and using it on systems that support RandR is highly
    # discouraged.
    #
    # By enabling this setting dunst will not be able to detect when a monitor
    # is connected or disconnected which might break follow mode if the screen
    # layout changes.
    force_xinerama = false

    ### mouse

    # Defines action of mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    mouse_left_click = close_current
    mouse_middle_click = do_action
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    foreground = "#4C566A"
    background = "#E5E9F0"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    foreground = "#4C566A"
    background = "#E5E9F0"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#BF616A"
    foreground = "#E5E9F0"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "frame_color", "new_icon" and "format", "fullscreen".
# Shell-like globbing will get expanded.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification

#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
# vim: ft=cfg
